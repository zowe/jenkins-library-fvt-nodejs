/*
 * This program and the accompanying materials are made available under the terms of the
 * Eclipse Public License v2.0 which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-v20.html
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Copyright Contributors to the Zowe Project.
 */

// this allows next build use specify library branch to test
if (params.FETCH_PARAMETER_ONLY) {
    echo "Exit after fetching parameters."
    currentBuild.result = 'NOT_BUILD'
    return
}
// always require LIBRARY_BRANCH to be set explicitly
if (!params.LIBRARY_BRANCH) {
    error 'LIBRARY_BRANCH parameter is required to start the test pipeline'
}
echo "Jenkins library branch ${params.LIBRARY_BRANCH} will be used to build."
def lib = library("jenkins-library@${params.LIBRARY_BRANCH}").org.zowe.jenkins_shared_library

node('ibm-jenkins-slave-nvm') {
    stage('before-all') {
        echo "before all started"
        sh 'env'
        echo "before all ended"
    }

    def pipeline = lib.pipelines.base.Pipeline.new(this)

    // define customized parameters
    // This is special for integration test
    pipeline.addBuildParameter(booleanParam(
        name: 'FETCH_PARAMETER_ONLY',
        description: 'By default, the pipeline will exit just for fetching parameters.',
        defaultValue: true
    ))
    pipeline.addBuildParameter(string(
        name: 'LIBRARY_BRANCH',
        description: 'Jenkins library branch to test',
        defaultValue: '',
        trim: true
    ))

    pipeline.admins.add("jackjia")

    pipeline.protectedBranches.addMap(
       name: "master"
    )

    pipeline.setup()

    pipeline.createStage(
        name: "CustomStage",
        isSkippable: true,
        stage: {
            echo "This is a custom stage, skippable"
        },
        timeout: [time: 1, unit: 'MINUTES'],
        resultThreshold: ResultEnum.FAILURE
    )

    pipeline.end()
}
