/*
 * This program and the accompanying materials are made available under the terms of the
 * Eclipse Public License v2.0 which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-v20.html
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Copyright Contributors to the Zowe Project.
 */

/**
 * These 2 build parameters are only required for running integration test
 */
def opts = []
// define custom build parameters
def customParameters = []
customParameters.push(booleanParam(
  name: 'FETCH_PARAMETER_ONLY',
  description: 'By default, the pipeline will exit just for fetching parameters.',
  defaultValue: true
))
customParameters.push(string(
  name: 'LIBRARY_BRANCH',
  description: 'Jenkins library branch to test',
  defaultValue: '',
  trim: true
))
opts.push(parameters(customParameters))

// set build properties
properties(opts)

/**
 * This check is only required for running integration test
 */
if (params.FETCH_PARAMETER_ONLY) {
    currentBuild.result = 'NOT_BUILT'
    error "Prematurely exit after fetching parameters."
}

node ('ibm-jenkins-slave-dind') {
    /**
     * This section is only required for running integration test.
     *
     * In real consumption of library, we should use default library branch. For
     * example:
     *
     * def lib = library("jenkins-library").org.zowe.jenkins_shared_library
     */
    def branch = 'master'

    if (params.LIBRARY_BRANCH) {
        branch = params.LIBRARY_BRANCH
    } else if (env.CHANGE_BRANCH) {
        branch = env.CHANGE_BRANCH
    } else if (env.BRANCH_NAME) {
        branch = env.BRANCH_NAME
    }

    echo "Jenkins library branch $branch will be used to build."
    def lib = library("jenkins-library@$branch").org.zowe.jenkins_shared_library

    def pipeline = lib.pipelines.docker.DockerPipeline.new(this)

    /**
     * These 2 build parameters are only required for running integration test
     */
    pipeline.addBuildParameters(customParameters)

    pipeline.admins.add("jackjia")

    pipeline.setup(
        packageName: 'org.zowe.jenkins-library-test.docker',
        githubTagPrefix: 'docker',
        docker: [
            url                        : lib.Constants.DEFAULT_DOCKER_REGISTRY_URL,
            usernamePasswordCredential : lib.Constants.DEFAULT_DOCKER_REGISTRY_CREDENTIAL,
            image                      : "${lib.Constants.DEFAULT_DOCKER_IMAGE_PREFIX}/jenkins-library-fvt-nodejs".toString(),
        ],
        disableArtifactory: true,
        disablePax:  true,
        extraInit: {
            // get current version, which is required by uploading artifacts
            def npm = lib.npm.Registry.new(this)
            def packageInfo = npm.getPackageInfo()
            pipeline.setVersion(packageInfo['version'])
        }
    )

    // default build stage, dockerFile is {@code "Dockerfile"}
    pipeline.build()

    pipeline.createStage(
        name          : "CustomStage",
        isSkippable   : true,
        stage         : {
            echo "This is a custom stage, skippable"
        },
        timeout: [time: 1, unit: 'MINUTES']
    )

    // default publish stage, image is "${lib.Constants.DEFAULT_DOCKER_IMAGE_PREFIX}/jenkins-library-fvt-nodejs"
    pipeline.publish()

    // we have release stage
    pipeline.release()

    pipeline.end()
}
